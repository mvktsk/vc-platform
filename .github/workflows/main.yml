name: Cherry-pick

on: 
  push:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
    branches: [ master, dev ]

jobs:
  check-label:
    runs-on: ubuntu-latest
    outputs:
      isLabeled: ${{ steps.checkLabel.outputs.isLabeled }}
      pullNumber: ${{ steps.checkLabel.outputs.pullNumber }}
      pullUrl: ${{ steps.checkLabel.outputs.pullUrl }}

    steps:
    - name: Check regression label
      id: checkLabel
      uses: VirtoCommerce/vc-github-actions/check-pr-regression-label@PT-802
      with:
        githubToken: ${{ secrets.REPO_TOKEN }}
        label: regression
        commitMessage: ${{ github.event.head_commit.message }}

  cherry-pick:
    needs: check-label
    if: ${{ needs.check-label.outputs.isLabeled == 'true'}}
    env: 
      PR_BRANCH: ""
      INPUT_TARGETBRANCH: "feature/regression"
      PR_TITLE: ""
      PR_BODY: ""
    runs-on: ubuntu-latest
    steps:
    - name: Set PR_BRANCH PR_TITLE PR_BODY
      run: |
        echo "PR_BRANCH=feature/cherry-pick-${{ needs.check-label.outputs.pullNumber }}" >> $GITHUB_ENV
        echo "PR_TITLE=PR-${{ needs.check-label.outputs.pullNumber }}-regression-cherry-pick" >> $GITHUB_ENV
        echo "PR_BODY=Automated cherry-pick update from PR ${{ needs.check-label.outputs.pullNumber }} ${{ needs.check-label.outputs.pullUrl}}" >> $GITHUB_ENV

    - name: checkout
      uses: actions/checkout@v1

    - uses: VirtoCommerce/vc-github-actions/setup-git-credentials-github@master
      with:
        githubToken: ${{ secrets.REPO_TOKEN }}

    - name: Cherry-pick
      run: |
          echo "-remote update"
          git remote update
          echo "-fetch --all"
          git fetch --all
          echo "-check-out"
          git checkout -b "${PR_BRANCH}" "origin/${INPUT_TARGETBRANCH}"
          echo "-cherry-pick"
          git cherry-pick "${GITHUB_SHA}"
          echo "-push"
          git push -u origin "${PR_BRANCH}"
          echo "-Create PR"
          echo "${INPUT_TARGETBRANCH}"
          echo "${PR_BRANCH}"
          echo "${PR_TITLE}"
          echo "${PR_BODY}"
          hub pull-request -b "${INPUT_TARGETBRANCH}" -h "${PR_BRANCH}" -m "${PR_TITLE}" -m "${PR_BODY}"
